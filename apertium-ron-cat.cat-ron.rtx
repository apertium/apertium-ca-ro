! POS

adj: _.adj_type.gender.number.case.definite ;
adj_conc: (if((1.gender_chunk=m | 1.gender_chunk=nt | 1.gender=m | 1.gender=nt) & 1.number=sg) 1(adj)[gender=mn]
          elif((1.gender_chunk=f | 1.gender_chunk=nt | 1.gender=f | 1.gender=nt) & 1.number=pl) 1(adj)[gender=fn]
          else 1(adj) ) ;
adv: _.adv_type ;
det: _.adj_type.gender.number.case ;
det_conc: (if((1.gender_chunk=m | 1.gender_chunk=nt) & 1.number=sg) 1(det)[gender=mn]
          elif((1.gender_chunk=f | 1.gender_chunk=nt) & 1.number=pl) 1(det)[gender=fn]
          else 1(det) ) ;
n: _.acr.gender.number.case.definite ;
num: _.gender.number ;
num_conc: (if((1.gender_chunk=m | 1.gender_chunk=nt) & 1.number=sg) 1(num)[gender=mn]
          elif((1.gender_chunk=f | 1.gender_chunk=nt) & 1.number=pl) 1(num)[gender=fn]
          else 1(num) ) ;
num_digits: _ ;
np: _.np_type.gender.number.case.definite ;
pr: _.gen ;
preadv: _ ;
predet: _.adj_type.gender.number.case ;
prn: _.prn_type.prn_type2.gender.number.case ;
prnclt: _.prn_type.prn_refadv.person.gender_clt.number_clt.case ;
prnpers: _.prn_type.person.gender.number.case ;
rel: _.prn_type.gender.number.case ;
vbavea: _.tense.person.number ;
vbhaver: _.tense.person.number ;
vblex: _.tense.person.number ;
vbmod: _.tense.person.number ;
vbser: _.tense.person.number ;
vb_impers: _.tense ;
vb_pp: _.tense.gender.number ;
vb_pp_conc: (if(1.gender=m & 1.number=sg) 1(vb_pp)[gender=mn] elif(1.gender=f & 1.number=pl) 1(vb_pp)[gender=fn] elif(1.gender=nt & 1.number=sg) 1(vb_pp)[gender=mn] elif(1.gender=nt & 1.number=pl) 1(vb_pp)[gender=fn] else 1(vb_pp) ) ;

Clt: _.prn_type.prn_refadv.person.gender_clt.number_clt.case ;
PV: _.person.gender_chunk.number ;
SAdj: _.adj_type.gender_chunk.number.case.definite ;
SAdv: _.adv_type ;
SDet: _.adj_type.gender_chunk.number.case ;
SN: _.SN_det.np_type.person.gender_chunk.number.case.definite ;
SNum: _.gender_chunk.number ;
SPredet: _.adj_type.gender_chunk.number.case ;
SPrep: _.SPrep_type.gen ;
SV: _.vb_type.vb_cnj.tense.person.gender_chunk.number ;



! Attributes

acr = acr ;
adj_type = def dem ind ord pos ;
adv_type = itg ;
case = nom dg ;
definite = ind def ;
gen = gen ;
gender = (GD m) m f nt mn fn @mf @mfn GD ;
gender_chunk = (GD m) m f nt GD ;
gender_clt = m f nt mn fn mf mfn ;
np_type = ant cog top al ;
number = (ND sg) sg pl @sp ND ;
number_clt = sg pl sp ;
person = (PD p3) p1 p2 p3 PD ;
prn_refadv = ref adv ;
prn_type = tn itg pro enc an nn ;
prn_type2 = pos ;
tense = pri fti cni imp prs pii ifi inf ger pp ;
vb_type = vbavea vblex vbmod vbser ;
vb_cnj = cnj impers ;

SN_det = undet det predet nodet prnpers ;
SPrep_type = pr SN ;

gender>gender_chunk: mf GD, mfn GD, mn m, fn f ;
gender_chunk>gender: GD GD ;



! Lists

adjord_nodet = prim întâi I ;
num_de = zero unu doi trei patru cinci șase șapte opt nouă zece
         unsprezece doisprezece treisprezece paisprezece cincisprezece șaisprezece șaptesprezece optsprezece nouăsprezece
         0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ;



! Rules

Clt ->  1: %prn.enc
                [$lem=1.lem]
                { (if(($lem not= "hi") & ($lem not= "en")) [%1(prnclt)[lem=$lem]]) } |
        1: %prn.pro
                [$lem=1.lem]
                { (if(($lem not= "hi") & ($lem not= "en")) [%1(prnclt)[lem=$lem]]) } ;


SAdj -> 1: %adj
                [$adj_type="",$case=nom,$definite=ind]
                { %1(adj_conc)[adj_type=""] } |
        2: %antepenúltim@adj
                [$adj_type="ord",$case=nom,$definite=ind]
                { %1(adj_conc) } |
        2: %penúltim@adj
                [$adj_type="ord",$case=nom,$definite=ind]
                { %1(adj_conc) } |
        2: %últim@adj
                [$adj_type="ord",$case=nom,$definite=ind]
                { %1(adj_conc) } |
        2: %adj.ord
                [$adj_type="ord",$case=nom,$definite=ind]
                { (if($lem incl adjord_nodet)
                        %1(adj_conc)
                elif(($gender_chunk=m | $gender_chunk=nt) & $number=sg)
                        [al@det.def.mn.$number _ %1(adj_conc)[case=nom,definite=ind]]
                elif(($gender_chunk=f | $gender_chunk=nt) & $number=pl)
                        [al@det.def.fn.$number _ %1(adj_conc)[case=nom,definite=ind]]
                else [al@det.def.$gender.$number _ %1(adj_conc)[case=nom,definite=ind]] ) } |
        2: %num.[gender].[number] ?(1.pos_tag/tl=adj)
                [$case=nom,$definite=ind]
                { (if($lem incl adjord_nodet)
                        %1(adj_conc)
                elif(($gender_chunk=m | $gender_chunk=nt) & $number=sg)
                        [al@det.def.mn.$number _ %1(adj_conc)[case=nom,definite=ind]]
                elif(($gender_chunk=f | $gender_chunk=nt) & $number=pl)
                        [al@det.def.fn.$number _ %1(adj_conc)[case=nom,definite=ind]]
                else [al@det.def.$gender.$number _ %1(adj_conc)[case=nom,definite=ind]] ) } |

        1: SAdv %SAdj
                { 1 _1 %2 } |

        0: %SV.*.impers.pp
                { %1 } ;


SAdv -> 1: %adv
                { 1 } |
        1: %preadv
                { 1 } |

        1: el@det.def.m.sg %num
                { în@pr _1 2(num_digits) } |
        1: en@pr %num
                { 1 _1 2(num_digits) } ;


SDet -> 1: %det.def
                [$case=nom]
                { %1(det_conc) } |
        2: %"l'altre"@det.def
                [$case=nom,$adj_type=ind]
                { %1(adj_conc)[adj_type=ind,definite=def] } |
        1: %det.ind
                [$case=nom,$adj_type=ind]
                { %1(det_conc)[adj_type=ind] } |
        1: %det.pos
                [$case=nom]
                { %1(adj_conc)[definite=ind] } |
        2: %"el seu"@det.pos
                [$case=nom,$gender_chunk=1.gender/sl,$number=1.number/sl]
                { 1(adj_conc)[gender=1.gender/ref,number=1.number/ref,case=nom,definite=ind] } |
        2: %adj.pos
                [$case=nom]
                { %1(adj_conc)[definite=ind] } |
        3: %seu@adj.pos
                [$case=nom,$gender_chunk=1.gender/sl,$number=1.number/sl]
                { 1(adj_conc)[gender=1.gender/ref,number=1.number/ref,case=nom,definite=ind] } |
        1: %det.dem
                [$case=nom]
                { %1(det_conc)} |
        2: %adj.ind
                [$adj_type=ind,$case=nom]
                { %1(adj_conc)[adj_type=ind,definite=ind] } |
        2: %bastant@adj
                [$adj_type="ind",$case=nom]
                { %1(adj_conc)[adj_type=ind,definite=ind] } |
        2: %força@adj
                [$adj_type="ind",$case=nom]
                { %1(adj_conc)[adj_type=ind,definite=ind] } |
        2: %més@adj
                [$adj_type="ind",$case=nom]
                { %1(det_conc)[adj_type=ind] } |
        2: %molt@adj
                [$adj_type="ind",$case=nom]
                { %1(adj_conc)[adj_type=ind,definite=ind] } ;


SPredet -> 1: %predet
                [$case=nom]
                { %1(det_conc) } ;


SPrep -> 0: %pr SN
                [$SPrep_type=SN]
                { 1 _1 2[definite=(if(1.lem=cu) def else ind)] } | ! Pot ser def sense cu si té complements
         1: %pr.gen SN
                [$SPrep_type=SN]
                { 1 _1 2[case=dg] } |
         1: %de@pr SN
                [$SPrep_type=SN]
                { 2[case=dg] } ;


SN ->   1: %n
                [$SN_det=undet,$person=p3,$case=nom,$definite=ind]
                { %1 } |

        1: %np.ant.m
                [$SN_det=det,$case=nom,$definite=def]
                { (if($case=dg) [lui@adj.pos.mn.sg.nom.def _] ) %1[case=nom,definite=def] } |
        1: %np.ant.f
                [$SN_det=det,$case=nom,$definite=def]
                { (if(1.gen not=gen & $case=dg) [lui@adj.pos.mn.sg.nom.def _ %1[case=nom,definite=def]] else %1[definite=def] ) } |
        1: %np.cog
                [$SN_det=det,$case=nom,$definite=def]
                { (if($case=dg) [lui@adj.pos.mn.sg.nom.def _] ) %1[case=nom,definite=def] } |
        1: %SN.det.ant SN.det.cog
                { %1 _1 2 } |
        1: %np.top
                [$SN_det=det,$case=nom,$definite=def]
                { %1[definite=def] } |
        1: %np.al
                [$SN_det=undet,$case=nom,$definite=ind]
                { %1 } |

        2: %prn.tn.[person] !Compte amb el datiu, que crea un error de generació
                [$SN_det=prnpers,$case=nom]
                { %1(prnpers) } |
        1: %prn.tn
                [$SN_det=nodet,$case=nom]
                { %1 } |
        1: %prn.itg
                [$SN_det=nodet,$case=nom]
                { %1 } |

        2: %SN SPrep
                { %1 _1 2 } |

        2: %SN SAdj
                [$gender_chunk=(if(1.gender=GD)2.gender else 1.gender),$number=(if(1.number=ND)2.number else 1.number)]
                { %1 _1 2[gender=$gender,number=$number] } |
        2: SAdj.ord %SN
                [$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %1 _1 2[gender=$gender,number=$number] } |
        3: SAdj.ord %SN ?(1.lem/tl=întâi)
                [$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { 2[gender=$gender,number=$number,definite=def] _1 %1 } |

        1: SDet.def %SN.undet
                [$SN_det=det,$definite=def,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %2 } |
        1: SDet.def %SN.det.ant
                { %2 } |
        1: SDet.dem %SN.undet
                [$SN_det=det,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %1[gender=$gender,number=$number] _1 2 } |
        1: SDet.ind %SN.undet
                [$SN_det=det,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %1[gender=$gender,number=$number] _1 2 } |
        3: SDet.pos %SN.undet
                [$SN_det=det,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %2[definite=def] _1 1[gender=$gender,number=$number] } |
        3: SDet.pos %SN.undet SPrep
                [$SN_det=det,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %2[definite=def] _1 1[gender=$gender,number=$number] _2 3 } |
        3: %SN.undet SDet.pos 
                [$SN_det=det,$gender_chunk=(if(1.gender=GD)2.gender else 1.gender),$number=(if(1.number=ND)2.number else 1.number)]
                { %1[definite=def] _1 2[gender=$gender,number=$number] } |

        1: SPredet.def %SN.det
                [$SN_det=predet,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { %1 _1 %2[case=nom,definite=def] } |

        1: SNum %SN.undet
                [$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { 1[gender=$gender] (if(1.lem not incl num_de)[_ de@pr]) _1 %2 } |

        2: %SN que@rel SV ! Per fer la concordança del verb de la hem de saber si el verb és transitiu o intrasitiu
                { %1 _1 2 _2 3 } ;


SNum ->  0: %num
                { %1(num_digits) } |
         1: %num.[gender]
                { %1(num_conc) } |
         2: SNum %SNum
                { 1 _1 %2 } ;


SV ->   1: %vblex.pri
                [$vb_cnj=cnj]
                { %1 } |
        1: %vblex.fti
                [$vb_cnj=cnj]
                { vrea@vaux.pri.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vblex.cni
                [$vb_cnj=cnj]
                { avea@vbavea.$tense.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vblex.pis
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vblex.imp
                [$vb_cnj=cnj,$person=(if(1.person=p3 & 1.number=pl) p2 else 1.person)] ! cantin > cântați
                { %1 } |
        1: %vblex.prs
                [$vb_cnj=cnj]
                { %1 } |
        1: %vblex.pii
                [$vb_cnj=cnj]
                { %1 } |
        1: %vblex.ifi
                [$vb_cnj=cnj]
                { %1 } |

        1: %vblex.inf
                [$vb_cnj=impers]
                { (if($tense=pp) %1(vb_pp_conc) else %1(vb_impers)) } |
        1: %vblex.ger
                [$vb_cnj=impers]
                { %1(vb_impers) } |
        1: %vblex.pp
                [$vb_cnj=impers]
                { %1(vb_pp_conc)[gender=$gender_chunk,number=$number] } |

        1: %vbser.pri
                [$vb_cnj=cnj]
                { %1 } |
        1: %vbser.fti
                [$vb_cnj=cnj]
                { vrea@vaux.pri.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vbser.cni
                [$vb_cnj=cnj]
                { avea@vbavea.$tense.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vbser.pis
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vbser.imp
                [$vb_cnj=cnj,$person=(if(1.person=p3 & 1.number=pl) p2 else 1.person)] ! cantin > cântați
                { %1 } |
        1: %vbser.prs
                [$vb_cnj=cnj]
                { %1 } |
        1: %vbser.pii
                [$vb_cnj=cnj]
                { %1 } |
        1: %vbser.ifi
                [$vb_cnj=cnj]
                { %1 } |

        1: %vbser.inf
                [$vb_cnj=impers]
                { (if($tense=pp) %1(vb_pp_conc) else %1(vb_impers)) } |
        1: %vbser.ger
                [$vb_cnj=impers]
                { %1(vb_impers) } |
        1: %vbser.pp
                [$vb_cnj=impers]
                { %1(vb_pp_conc) } |

        1: %vbhaver.pri
                [$vb_cnj=cnj]
                { %1 } |
        1: %vbhaver.fti
                [$vb_cnj=cnj]
                { vrea@vaux.pri.$person.$number _ fi@vbser.inf } |
        1: %vbhaver.cni
                [$vb_cnj=cnj]
                { %1 } |
        1: %vbhaver.pis
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vbhaver.prs
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vbhaver.pii
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vbhaver.ifi
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |

        1: %vbhaver.inf
                [$vb_cnj=impers]
                { %1(vb_impers) } |
        1: %vbhaver.ger
                [$vb_cnj=impers]
                { %1(vb_impers)[tense=inf] } |
        1: %vbhaver.pp
                [$vb_cnj=impers]
                { %1(vb_impers)[tense=inf] } |

        1: %vbmod.pri
                [$vb_cnj=cnj]
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |
        1: %vbmod.fti
                [$vb_cnj=cnj]
                { vrea@vaux.pri.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vbmod.cni
                [$vb_cnj=cnj]
                { avea@vbavea.$tense.$person.$number _ 1(vb_impers)[tense=inf] } |
        1: %vbmod.pis
                [$vb_cnj=cnj,$tense=pri]
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |
        1: %vbmod.imp
                [$vb_cnj=cnj,$person=(if(1.person=p3 & 1.number=pl) p2 else 1.person)] ! cantin > cântați
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |
        1: %vbmod.prs
                [$vb_cnj=cnj]
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |
        1: %vbmod.pii
                [$vb_cnj=cnj]
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |
        1: %vbmod.ifi
                [$vb_cnj=cnj]
                { (if(1.lem equalcl trebui) %1[person=p3,number=sg] else %1) } |

        1: %vbmod.inf
                [$vb_cnj=impers]
                { (if($tense=pp) %1(vb_pp_conc) else %1(vb_impers)) } |
        1: %vbmod.ger
                [$vb_cnj=impers]
                { %1(vb_impers) } |
        1: %vbmod.pp
                [$vb_cnj=impers]
                { %1(vb_pp_conc) } |

        2: %merge@SV.vblex.cnj.pri SV.*.impers.inf
                [$lem=2.lem,$tense=ifi]
                { avea@vbavea.pri.$person.$number _1 2[tense=pp] } |
        2: %avea@SV.vbavea.cnj.pri SV.*.impers.pp
                [$lem=2.lem,$tense=ifi]
                { 1[person=$person,number=$number] _1 2 } |


        1: %SV.*.impers.ger Clt.enc
                { %1 + 2 } |
        2: %SV.*.impers.ger Clt.enc Clt.enc
                { (if(3.case not= dg)
                        [%1 + 2[case=dg] + 3]
                else
                        [%1 + 3]) } |
        3: %SV.*.impers.ger Clt.enc Clt.enc.adv
                { %1 + 2 + 3 } |

        1: %SV.*.impers.inf Clt.enc
                { 2[prn_type=pro] _1 %1 } |
        2: %SV.*.impers.inf Clt.enc Clt.enc
                { (if(2.prn_refadv not= ref) [2[prn_type=pro,case=dg] _1]) (if(3.case not= dg) [3[prn_type=pro] _2]) %1 } |
        3: %SV.*.impers.inf Clt.enc Clt.enc.adv
                { 2[prn_type=pro] _1 3[prn_type=pro] _2 %1 } |

        1: %SV.*.cnj.imp Clt.enc
                { %1 + 2 } |
        2: %SV.*.cnj.imp Clt.enc.ref
                { %1 + 2[lem="vă",prn_refadv="",person=p2,gender_clt=mf,number_clt=pl] } |
        2: %SV.*.cnj.imp Clt.enc Clt.enc
                { (if(3.case not= dg)
                        [%1 + 2[case=dg] + 3]
                else
                        [%1 + 3]) } |
        3: %SV.*.cnj.imp Clt.enc.ref Clt.enc
                { (if(3.case not= dg)
                        [%1 + 2[lem="vă",prn_refadv="",person=p2,gender_clt=mf,number_clt=pl,case=dg] + 3]
                else
                        [%1 + 3]) } |
        3: %SV.*.cnj.imp Clt.enc Clt.enc.adv
                { %1 + 2 + 3 } |
        4: %SV.*.cnj.imp Clt.enc.ref Clt.enc.adv
                { %1 + 2[lem="vă",prn_refadv="",person=p2,gender_clt=mf,number_clt=pl] + 3 } |

        2: %SV.*.cnj.ifi Clt.enc
                { 2[prn_type=pro] _1 %1 } |
        4: %SV.*.cnj.ifi Clt.enc Clt.enc
                { 2[prn_type=pro,case=dg] (if(3.case not= dg) [_1 3[prn_type=pro]]) _2 %1 } |
        5: %SV.*.cnj.ifi Clt.enc Clt.enc.adv
                { 2[prn_type=pro] _1 3[prn_type=pro] _2 %1 } |
        3: %SV.*.cnj.ifi Clt.enc.p3.f.sg
                { %1 + 2 } |

        1: Clt.pro %SV.*.cnj
                { 1 _1 %2 } |
        3: Clt.pro Clt.pro %SV.*.cnj
                { (if(2.case not= dg) [1[case=dg] _1] ) 2 _2 %3 } |
        4: Clt.pro Clt.pro.adv %SV.*.cnj
                { 1 _1 2 _2 %3 } |
        2: Clt.pro.p3.f.sg %SV.*.cnj.ifi
                { %2 + 1[prn_type=enc] } |
        4: Clt.pro Clt.pro.p3.f.sg %SV.*.cnj.ifi
                { 1[case=dg] _1 %3 + 2[prn_type=enc] } |

        1: SAdv %SV
                { 1 _1 %2 } |

        2: %SV.*.cnj SAdj.$gender
                { %1 _1 %2 };


PV ->   0: SN.$person SV.*.cnj
                [$gender_chunk=(if(1.gender=GD)2.gender else 1.gender),$number=(if(1.number=ND)2.number else 1.number)]
                { %1 _1 %2 } ;
